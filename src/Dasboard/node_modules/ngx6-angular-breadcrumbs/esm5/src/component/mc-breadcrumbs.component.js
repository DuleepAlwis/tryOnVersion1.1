/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { McBreadcrumbsService } from '../service/mc-breadcrumbs.service';
import { Component } from '@angular/core';
var McBreadcrumbsComponent = /** @class */ (function () {
    function McBreadcrumbsComponent(service) {
        this.service = service;
        this.subscriptions = new Array();
    }
    /**
     * @return {?}
     */
    McBreadcrumbsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var s = this.service.crumbs$.subscribe(function (x) {
            _this.crumbs = x;
        });
    };
    /**
     * @return {?}
     */
    McBreadcrumbsComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach(function (x) { return x.unsubscribe(); });
    };
    McBreadcrumbsComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'mc-breadcrumbs',
                    template: "<ol *ngIf=\"crumbs.length\" class=\"breadcrumb\">\n  <li *ngFor=\"let crumb of crumbs; let last = last\" [ngClass]=\"{ 'active': last }\" class=\"breadcrumb-item\">\n    <a *ngIf=\"!last\" [routerLink]=\"crumb.path\">{{ crumb.text }}</a>\n    <span *ngIf=\"last\">{{ crumb.text }}</span>\n  </li>\n</ol>\n"
                },] },
    ];
    /** @nocollapse */
    McBreadcrumbsComponent.ctorParameters = function () { return [
        { type: McBreadcrumbsService }
    ]; };
    return McBreadcrumbsComponent;
}());
export { McBreadcrumbsComponent };
if (false) {
    /** @type {?} */
    McBreadcrumbsComponent.prototype.crumbs;
    /** @type {?} */
    McBreadcrumbsComponent.prototype.subscriptions;
    /** @type {?} */
    McBreadcrumbsComponent.prototype.service;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWMtYnJlYWRjcnVtYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWJyZWFkY3J1bWJzLyIsInNvdXJjZXMiOlsic3JjL2NvbXBvbmVudC9tYy1icmVhZGNydW1icy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRXpFLE9BQU8sRUFBRSxTQUFTLEVBQXFCLE1BQU0sZUFBZSxDQUFDOztJQWdCM0QsZ0NBQW1CLE9BQTZCO1FBQTdCLFlBQU8sR0FBUCxPQUFPLENBQXNCOzZCQUloQyxJQUFJLEtBQUssRUFBZ0I7S0FKVzs7OztJQU03Qyx5Q0FBUTs7Ozs7O1FBQ2IsSUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFVBQUEsQ0FBQztZQUN4QyxLQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztTQUNqQixDQUFDLENBQUM7Ozs7O0lBR0wsNENBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQWYsQ0FBZSxDQUFDLENBQUM7S0FDbEQ7O2dCQTFCRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSxtVEFNWDtpQkFDQTs7OztnQkFoQlEsb0JBQW9COztpQ0FBN0I7O1NBaUJhLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1jQnJlYWRjcnVtYnNTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9tYy1icmVhZGNydW1icy5zZXJ2aWNlJztcblxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUJyZWFkY3J1bWIgfSBmcm9tICcuLi9tYy1icmVhZGNydW1icy5zaGFyZWQnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnbWMtYnJlYWRjcnVtYnMnLFxuICB0ZW1wbGF0ZTogYDxvbCAqbmdJZj1cImNydW1icy5sZW5ndGhcIiBjbGFzcz1cImJyZWFkY3J1bWJcIj5cbiAgPGxpICpuZ0Zvcj1cImxldCBjcnVtYiBvZiBjcnVtYnM7IGxldCBsYXN0ID0gbGFzdFwiIFtuZ0NsYXNzXT1cInsgJ2FjdGl2ZSc6IGxhc3QgfVwiIGNsYXNzPVwiYnJlYWRjcnVtYi1pdGVtXCI+XG4gICAgPGEgKm5nSWY9XCIhbGFzdFwiIFtyb3V0ZXJMaW5rXT1cImNydW1iLnBhdGhcIj57eyBjcnVtYi50ZXh0IH19PC9hPlxuICAgIDxzcGFuICpuZ0lmPVwibGFzdFwiPnt7IGNydW1iLnRleHQgfX08L3NwYW4+XG4gIDwvbGk+XG48L29sPlxuYFxufSlcbmV4cG9ydCBjbGFzcyBNY0JyZWFkY3J1bWJzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTogTWNCcmVhZGNydW1ic1NlcnZpY2UpIHt9XG5cbiAgY3J1bWJzOiBJQnJlYWRjcnVtYltdO1xuXG4gIHN1YnNjcmlwdGlvbnMgPSBuZXcgQXJyYXk8U3Vic2NyaXB0aW9uPigpO1xuXG4gIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBzID0gdGhpcy5zZXJ2aWNlLmNydW1icyQuc3Vic2NyaWJlKHggPT4ge1xuICAgICAgdGhpcy5jcnVtYnMgPSB4O1xuICAgIH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLmZvckVhY2goeCA9PiB4LnVuc3Vic2NyaWJlKCkpO1xuICB9XG59XG4iXX0=