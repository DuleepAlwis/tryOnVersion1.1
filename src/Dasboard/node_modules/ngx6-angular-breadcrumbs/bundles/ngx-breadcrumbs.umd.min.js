!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs"),require("lodash.template"),require("lodash.templatesettings"),require("@angular/core"),require("@angular/router"),require("rxjs/operators"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-breadcrumbs",["exports","rxjs","lodash.template","lodash.templatesettings","@angular/core","@angular/router","rxjs/operators","@angular/common"],t):t(e["ngx-breadcrumbs"]={},e.rxjs,null,null,e.ng.core,e.ng.router,e.rxjs.operators,e.ng.common)}(this,function(e,i,t,r,n,o,s,u){"use strict";var c={template:t,templateSettings:r};function a(e){return e instanceof i.Observable?e:function t(e){return e&&"function"==typeof e.then}(e)?i.from(Promise.resolve(e)):i.of(e)}c.templateSettings.interpolate=/{{([\s\S]+?)}}/g;var f=function(){function e(){}return e.decorators=[{type:n.Injectable}],e}(),l=function(){function e(){}return e.prototype.resolve=function(e,t){var r=e.routeConfig.data,n=this.getFullPath(e),o="string"==typeof r.breadcrumbs?r.breadcrumbs:r.breadcrumbs.text||r.text||n,s=[{text:o=function u(e,t){return c.template(e)(t)}(o,e.data),path:n}];return i.of(s)},e.prototype.getFullPath=function(e){return e.pathFromRoot.reduce(function(e,t){return e+t.url.reduce(function(e,t){return e+"/"+t.path},"")},"")},e}(),p=function(){function e(r,e,t){var n=this;this._router=r,this._config=e,this._injector=t,this._breadcrumbs=new i.BehaviorSubject([]),this._defaultResolver=new l,this._router.events.pipe(s.filter(function(e){return e instanceof o.NavigationEnd})).subscribe(function(e){var t=r.routerState.snapshot.root;n._resolveCrumbs(t).pipe(s.flatMap(function(e){return e}),s.distinct(function(e){return e.text}),s.toArray(),s.flatMap(function(e){return n._config.postProcess?a(n._config.postProcess(e)).pipe(s.first()):i.of(e)})).subscribe(function(e){n._breadcrumbs.next(e)})})}return Object.defineProperty(e.prototype,"crumbs$",{get:function(){return this._breadcrumbs},enumerable:!0,configurable:!0}),e.prototype._resolveCrumbs=function(e){var t,r=e.routeConfig&&e.routeConfig.data;if(r&&r.breadcrumbs){t=a((r.breadcrumbs.prototype instanceof l?this._injector.get(r.breadcrumbs):this._defaultResolver).resolve(e,this._router.routerState.snapshot)).pipe(s.first())}else t=i.of([]);return e.firstChild&&(t=t.pipe(s.concat(this._resolveCrumbs(e.firstChild)))),t},e.decorators=[{type:n.Injectable}],e.ctorParameters=function(){return[{type:o.Router},{type:f},{type:n.Injector}]},e}(),b=function(){function e(e){this.service=e,this.subscriptions=new Array}return e.prototype.ngOnInit=function(){var t=this;this.service.crumbs$.subscribe(function(e){t.crumbs=e})},e.prototype.ngOnDestroy=function(){this.subscriptions.forEach(function(e){return e.unsubscribe()})},e.decorators=[{type:n.Component,args:[{selector:"mc-breadcrumbs",template:'<ol *ngIf="crumbs.length" class="breadcrumb">\n  <li *ngFor="let crumb of crumbs; let last = last" [ngClass]="{ \'active\': last }" class="breadcrumb-item">\n    <a *ngIf="!last" [routerLink]="crumb.path">{{ crumb.text }}</a>\n    <span *ngIf="last">{{ crumb.text }}</span>\n  </li>\n</ol>\n'}]}],e.ctorParameters=function(){return[{type:p}]},e}(),m=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[p,f]}},e.decorators=[{type:n.NgModule,args:[{imports:[u.CommonModule,o.RouterModule],declarations:[b],exports:[b]}]}],e}();e.McBreadcrumbsComponent=b,e.McBreadcrumbsService=p,e.McBreadcrumbsConfig=f,e.McBreadcrumbsResolver=l,e.McBreadcrumbsModule=m,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-breadcrumbs.umd.min.js.map